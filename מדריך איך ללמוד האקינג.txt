אמרת התקפות, אז אני לוקח שאתה רוצה בדיקת-חדירות. תתחיל ללמוד דרך דוגמאות. כדי להתחיל לתפוס את ההבנה של פנטסטינג יש לך קופסאות פגיעות כמערכות הפעלה שאתה מכניס לVirtual Box באתר vulnhub.com, תתחיל להוריד ולפתור אותם: יש כמה מאוד בסיסיות (Metasploitable, tr0ll) וכו'. אתה תרצה ללמוד שליטה טובה בכלים (nmap, metasploit, dirbuster, sqlmap, beef, burp suite, aircrack-ng, ettercap & bettercap וכו בתור התחלה). תוריד דברים ותתחיל לשחק איתם מול המערכות הפגיעות שהורדת, תן כמה שעות לנסיון ואז תחפש פתרונות באינטרנט. לראות סרטונים ביוטיוב, לקרוא מדריכים גרועים, לבקש עזרה ולבדוק תשובות זה לא בושה. כל מה שיגרום לך להצליח - אחרי שאתה מצליח תתאמץ להבין למה הצלחת. אין נצחון בלהיות תוכי. כדי להתחיל, כנס לאתר שדיברתי עליו ותמשיך לקרוא את התגובה. כשיש לך מספיק בסיס, תמשיך לחלקים האחרים של התגובה הזאת ובעצם תתחיל להתמקצע. מפה אתה ממשיך להתרחב: עוד אתגרים, עוד מאמרים, עוד כתבות, עוד שיטות, עוד ספרים, אתה ממשיך לבלוע ידע וליישם אותו. הכלים המנטליים שלך מתרחבים, והידע שלך בכלים פרקטיים מתרחב. כל מה שעוזר לך לתקוף ביעילות, בחשאיות, להוציא הכל, ולדאוג ששום דבר לא הולך לקלוט אותך בדרך ליציאה.

בארסנל של כל פנטסטר טוב יש בדר"כ התמקצעות אחת חזקה בשפת סקריפטינג טובה: Python, Perl, Ruby ועוד. תפוס אחת, פייטון כנראה, ותלמד לתכנת איתה. אתה לא רוצה ללמוד כמתכנת (למרות שזה כמובן יהיה הדבר היותר נכון לעשות) אלא כמאבטח מידע: תלמד עקרונות שפה ומיד תקפוץ להתממשקות עם כמה שיותר כלים, ספריות, מודלים ודברים שאתה צריך. אני לדוגמא בסיטואציה מסוימת הייתי צריך להתמודד עם הזרקת SQL מאוד בעייתית באתר עם חומת אש שמראש חסמה את הנסיונות של SQLMAP, אז הייתי צריך לתכנת חוקים חדשים לתוך התוכנה שתצליח להתמודד עם אותה חומת אש. פייטון היה שימושי פה. יהיו סיטואציות בהם האקספלויטים (ניצולים לחורי אבטחה) שתשתמש בהם לא יעבדו מסיבה כזו או אחרת. אם אתה טוב, אתה יכול להקים מיידית סביבה מקומית אצלך כמעבדה לבדוק את ההתקפה ולערוך אותה בהתאם, וזה למה אתה כנראה רוצה לדעת לתכנת טוב.
כדי להתחיל פייטון, תפוס את הספר של פייטון באתר הסייבר או לך על codecademy.com ותתחיל שם את הקורס של פייטון.
אני אפילו לא נכנס לכל הבולשיט של ה"אל תהיה סקיד, תלמד איך דברים עובדים לפני שאתה משתמש בהם" כי אני לוקח בחשבון שאולי לא באמת אכפת לך איך דברים עובדים וסתם באלך להריץ כלים כי זה מגניב, וזה סבבה לגמרי. רק, אם תעשה את זה ותמנע מללמוד שפת סקריפטינג, לא תוכל בתכלס להיות טוב. ולהיות טוב זה להתמודד עם אתגרים רציניים לבדך, זה להמציא גישות ולחשוב על פתרונות לבד ולשכתב התקפות קיימות כשהן נכשלות ולהבין למה הן נכשלות ולשבת מולך מול הרשת ולהבין מה עובר איך עובר כי אתה יודע את הפרוטוקוליפ וכו. להיות טוב זה להבין איך הכל עובד. אם תלמד לתכנת, אתה תוכל להתגבר פי עשרות יותר טוב על בעיות מול אדם שרק יודע להריץ כלים, כי לך יש את היכולת לפתור בעיות עם השכל ולא עם הזכרון של האצבעות על המקלדת. 100% מהבעיות יהיו נגישות אליך, בניגוד ל7% מהבעיות שאולי אפשר לפתור אוטומטית לגמרי.

פנטסטרים מתמחים בדברים שונים, אבל לדעת לינוקס משותף לכולם. תטען Ubuntu או הפצה אחרת לתוך מכונה וירטואלית (Virtual Box) ותתחיל ללמוד מה זה לינוקס, מה זה טרמינל, מה זה Bash, מה זה filesystem, מה זה הרשאות, מה זה cat echo cut find diff ls ifconfig dig seq awk ln uniq gzip tar curl wget lynx netcat top ps (ועוד הרבה יותר, כן? זה קמצוץ קטן של פקודות&תוכנות שתמצא את עצמך מזדקק), איך עושים pipe איך מכווינים פלט של קובץ לקלט של תוכנה אחרת, מה זה זרמים, מטמון, daemonים, משימות תזמון, ועוד מלא. אתה רוצה להיות טוב בלשלוט בלינוקס אשר אובייקטיבית יותר טובה לפנטסטר מאשר אופציות אחרות. אז כדי להתחיל לינוקס, תוריד הפצה כלשהי ותשתמש כמה שיותר, אם אתה באמת רציני תמחק את הווינדוס ותשתמש רק בלינוקס. תעביר את כל הפעילויות היומיומיות שלך לתוך לינוקס, ותשתמש כמה שיותר במערכת ההפעלה - אתה תספוג דברים על הדרך אם תרצה ואם לא תרצה 

פנסטסטרים בדר"כ רוצים להתמקצע בנקודה מסוימת. אתה יכול ללכת למחקר: הנדסה אחורית לדוגמא, תאפשר לך להבין את הבפנוכו של קבצי הרצה ובעצם להבין איך תוכנות עובדות. אתה כבודק אבטחה סה"כ משתמש בניצולים ידועים של חורי אבטחה אשר נמצאו בתוכנות אשר בדר"כ רצות כשרת ומממשות פרוטוקול בינו לבין הקליינט. הנדסה הפוכה, זה בין היתר להבין איך למצוא ולאתר את אותן החולשות באותן מימושים של אותן תוכנות. זה, בתמורה, יכול להעניק לך ידע איך להתמודד איתם: בין עם זה למצוא חולשות, להבין סודות, או סתם לכתוב משהו יותר טוב. אתה לא יכול סתם ככה לשלוף את קוד המקור של התוכנה מעצמה ולדעת מראש איך כתבו את זה, זה לא עובד ככה. אתה מקבל את קוד המכונה שאותו המחשב שלך מכיר ומריץ (אולי על פלטפורמה מבודדת כגון JVM אם זה נכתב על ידי Java, או frameworks כגון .NET אם זה נכתב לדוגמא ע"י C#) או "על יבש" ("נאטיבי - Native" אם ההמרה התרחשה בצורה ישירה משפת התכנות לבסופו-של-דבר קוד מכונה, שפות C, C++, Rust עושות זאת). אבל זה קוד מכונה, לא קוד תוכנה, אתה לא הכי יכול להבין את זה אם אתה רק תקרא אותו. וזה למה אתה לומד איך לעבור עליו עם דיבאגר (תוכנה ש"עוצרת" תוכנות אחרות ועוברת על זרימת ההרצה שלהן) וdissasembler, ואז אתה מפענח מה הן עושות. זוהי יכולת מפתח שעוזרת מאוד בפחות או יותר כל דבר. לחבר שוודי היה תחביב לבצע רברסינג לצ'יטים של Counter Strike: Global Offensive, להדליף את הקוד מקור ובכך לחסל לו את המתחרים. פיתוח צ'יטים זה רק אחד מהרבה דברים שאפשר לעשות אם אתה מרברס טוב.
כדי להתחיל הנדסה הפוכה (אחרי שאתה יודע לתכנת בשפת C\++ ויודע לקרוא אסמבלי ברמה טובה) גגל על lena151, תתחיל לקרוא את beginners.re ותבחר פלטפורמה. יש לךך אתגרי רברסינג טובים בpwnerrank.com, וגם בoverthewire.org (בשם Behemoth) אבל תתחיל בקטנה. ספרים טובים יהיו The Secrets Of Reverse Engineering, Practicall Reverse Engineering

אותו קוד מכונה פיתוח אקספלויטים, זה מראש למצוא את החולשה (אולי לבדך דרך הנדסה אחורית, אולי קוד התוכנה נגיש אליך דרך אמצעים אחרים) ואז לנצל אותה. זאת אומרת, להגיע ממצב שיש לנו קלט בתוכנה, לדריסת המחסנית אשר מגדירה סטאטית את הגבולות של אותו קלט, לתוך דריסת כתובת החזרה של אותה מסגרת, לתוך הפנייה לקוד הזדוני שלך אשר התוכנה תריץ במקום. להבין לעומק איך מחשב מתייחס לתוכנות, איך זכרון עובד, ומתי מתכנת פישל בלהשתמש בצורה נכונה בזכרון מאפשר לך ללמוד ואז לנצל מגוון אדיר של התקפות מבוססות גלישת זכרון דרך פאשלות כגון Off-By-One, Dangling Pointers, Format String Exploitation, Use-After-Free, Double Free, Dereferenced Null Pointer ועוד מלא. כמובן שאותן פאשלות נהיות מאתגרות יותר לניצול כשיש לך הגנות שעוטפות את קבצי ההרצה. לומדים הגנות כגון DEP, SEH, Stack Canaries, no-eXecute, EMET, KASLR בווינדוס \ לינוקס ואז איך להתמודד איתם (כשאפשר) בעזרת טכניקות כגון ROP: ret2libc, ret2plt, ret2got ועוד מלא.
כדי להתחיל Exploit-development דאג ראשית לדעת C טוב (לדעת הנדסה הפוכה יהיה פלוס ענק), ואז תתחיל לקרוא את The Art Of Exploitation. משם באלך להרחיב לתוך Shellcoders Handbook וביניהם לפתור אתגרים כגון Narnia בoverthewire.org, ולהמשיך להתעדכן במאמרים ספרים אתגרים וכל מה שאתה מוצא.

יש לנו נוזקות. כולנו יודעים איך להפעיל אנטי וירוס ולבצע סריקה - אבל מי יוצר אותם? אתה, אם תרצה. קיילוגרים שרצים ברקע של המחשב שלך ומקליטים כל לחיצה (והרמת האצבע של הלחיצה  ), סטילרים שנפתחים, מיד תופסים את כל קבצי הסיסמאות מהדפדפנים ומכל התוכנות במחשב, שולחים אותם לתוקף ומשמידים את עצמם, סוסים טרויאנים ורוגלות עם מאה ואחת זרועות שיכולות להאזין ולשלוט בכל אספקט בווינדוס שלך: לראות אותך במצלמת הרשת, לשמוע אותך במיקרופון, לראות את המסך שלך, לפתוח תוכנות להריץ קוד לבצע התקפת מניעת שירות, להצפין את הדיסק מרחוק ולבצע כל כך הרבה דברים אחרים, רוטקיטים שנכנסים עמוק לתוך מערכת ההפעלה (יוזרלנד \ קרנללנד) ושומרים על גישה אחורית לתוקף לזמן של חודשים ע"י טכניקות הסוואה מתקדמות (דריסת פונקציות דרך ספריות משותפות נוסח LD_PRELOAD, העלמת עקבות ברשת, העלמת התהליך עצמו מרשימת התהליכים) ושומרים את התוקף באפלה מוחלטת, ועוד מלא. ואיך אנחנו עוקפים מערכות הגנה כגון IPS & IDS מלגלות את הוירוס שלנו שרץ ברשת? ואיך אנחנו עוטפים את הוירוס שלנו בשכבות על שכבות של טשטוש והצפנה כדי להבריח אותו מבעד אנטי וירוסים? תגלה אם תרצה. זה העולם של Malware Development, פיתוח נוזקות. באלך? כדי להתחיל פיתוח נוזקות תלמד C\++ (עדיף ++), תלמד ווינדוס לעומק (אתה תרצה לשלוט ברמה גבוהה בWinAPI ומעבר לזה. יש הרבה מאוד פונקציות שלא מופיעות בMSDN - ומסיבות טובות. ככול שתדע יותר טוב ווינדוס ולתכנת לתוכו, הוירוסים שלך יהיו יותר טובים. אתה תרצה לדעת איך להימנע מSandboxing, אתה תרצה ללמוד איך לעקוף אנטי וירוסים (Scantime, Runtime. בתור התחלה הייתי ממליץ לראות איך Vile בKALI עושה את זה. בדר"כ קידוד זכרון בהתחלה וקידוד הפוך בחזרה), ואם אתה טוב אתה תרצה גם לדעת איך להתמודד עם חוקרי נוזקות. אלה אנשים עם ידע מאוד מעמיק ברברסינג, ויותר מזה, ידע מעמיק בנוזקות אך בצד השני. המשימה שלך תהיה להתחכם כמה שיותר ולהתמודד איתם. כדי לדעת איך הם חושבים, קרא את Practical Malware Analysis. לא התקדמתי בחקר נוזקות כי זה פחות תקיפה ויותר הגנה, אבל תזכור שזה גם אופציה.

יש אנשים שמתרכזים יותר באבטחת אתרים.: הם לומדים להפנים שפות אתרים, צד לקוח כגון HTML CSS JS ושפות צד שרת כגון PHP SQL, משם מתחילים לבנות כמה מערכות בסיסיות (מערכות משתמשים בסיסיות, אולי אפשר להירשם או להתחבר או להעלות קבצים או להגיב דברים) ומשם מגלים כמה בדיוק מחוררת הפלטפורמה הזאת. אם תרצה להתרכז באבטחת אתרים, אתה כנראה תלמד הזרקות קוד: SQLi, XSS, LFI, RFI, RCE, SSI, XMLi, Object Injection, חולשות לוגיות כגון Execute After Redirect, Session Fixation, HTTP Parameter Pollution, HTTP Response Splitting, Directory Traversal וכו. יש הרבה, הרבה מאוד סוגי פאשלות באבטחת אתרים, כי יש הרבה טכנולוגיות, ממשקים, פלטפורמות וקרקעות לתכנת עליהן ולהציג כאתר. אני ממליץ תמיד להתחיל מPHP כשפת הצד-שרת כי לבנתיים היא הכי פופולרית, רוב האתגרים יהיו עליה וכו'. כמובן שיש מלא חורים גם בASP (שאותה בדרכ כבר לא תראה, אלא ASP.NET כASPX - שם יש לה FIREWALL שקצת הורסת למתחילים את היכולת ללמוד). לSQL, תתחיל מMySQL. אפשר להתקדם אחרכ למסדים אחרים כגון MSSQL, MSAccess ועליהם לתרגל אבטחה והזרקות. לפי דעתי, זוהי ההתמקצעות הכי נגישה שתהיה לך בתור מתחיל כי מאוד קל וזריז להתחיל מאבטחת אתרים ובניגוד לרברסינג או אקספלויטינג אתה רואה באתרים תוצאות מאוד מהר. לא שאני אומר שאבטחת אתרים זה קל - זה לא, אבל זה הכי נגיש. כמובן, שזה יכול מהר מאוד להסתבך ולהיות קשה. כל דבר קשה כשאתה מחליט שאתה רוצה לדעת אותו טוב, להיות תותח ולהצליח דברים קשים. עוד סיבה להתחיל מפה היא הזרימה הנהדרת שיש לאבטחת אתרים עם אבטחת רשתות כפנטסטר. אתר מופיע לך כשירות httpd על פורט 80 שדרכו אתה יכול לבצע את כל ההתקפות מבוססות הזרקות הקוד, ומשם יש לך דרך לשרת שזה בעצם המטרה שלך. הרבה מאוד פעמים, הדלת תהיה דרך האתר. אחרי שאתה נוחת דרך web-shell (כגון GNY, MadSpot, r57, C99) אתה ממשיך וממשיך להסלים את הדרך שלך לתוך מערכת ההפעלה, ראשית אתה תרצה להתנער מקבוצת הwww-data (קבוצת המשתמשים במערכת ההפעלה אשר מריצים את סטאק האתר) ולתוך משתמש האתר בצורה נורמלית ולא דרך חוצץ PHP. אז אתה תבצע Reverse Connection (כנראה דרך netcat וסקריפט פייטון), ומשם כבר העניינים מתחילים להתחמם. המטרה שלך היא כאמור עדיין להסלים את ההרשאות שלך לכמה שיותר גבוהות, אתה תמיד תרצה להיות רוט או כל משתמש אחר שמצאת עם uid=0. פה זה כבר שילוב של ה-כ-ל. זה שילוב של רברסינג, אם אתה מוצא קבצי הרצה suid חשובים. זה אקספלויטציה, אם אתה מזהה שירותי רוט שרצים ברקע עם חורים שלא עובדים ואתה צריך לקמפל & לסדר אותם (Local Root Exploits), כל הנושאים משתלבים פה. אפילו ידע טוב בלינוקס יאפשר לך אולי לזהות קובץ הסטוריה כגון bash_history ואז בפוקס לראות את הסיסמא של הרוט דרך שירות לוגגינג כזה או אחר, או אולי ביצוע sudo של יוזר אחר. זה נטו כמה אתה טוב בתור תוקף, ודרך פופולרית להתחיל את כל סבטוחת הסלמת ההרשאות הנ"ל היא דרך אתרים. אתה סה"כ תרצה למצוא שרשרת חורים (או לפעמים, אחד יספיק) שתאפשר לך להנחית קוד צד שרת זדוני שלך לתוך השרת, ואיכשהו להגיע למצב שיש לך את השאלל ההתחלתי. זה יכול להיות דרך load_file() דרך SQL Injection או לפרוץ את ההאש למשתמש הSQL ואז להתחבר דרך PHPMyAdmin ולעשות אותו הדבר, או זה למצוא שירות באתר שקורא קבצים לוקאליים ולגרום לו לקרוא קובץ זדוני שלך (RFI) או קובץ לוקאלי (LFI) ומשם לקרוא שגיאה מפוברקת (error_log \ access_log log poisoning) וכו'. הדרכים לא נגמרות. האתגרים קיימים. רצית לתקוף? פה אתה תתקוף הרבה.
כדי להתחיל אבטחת אתרים: תלמד לתכנת בPHP & JAVASCRIPT, תפנים HTML CSS SQL, תעמיק יותר לתוך פרוטוקולי DNS HTTP FTP SMTP, ותפתור כמה שיותר אתגרים. יש לך את Natas בoverthewire.org, יש לך את TryThis0ne, HackThisSite ועוד מלא. זה תחום עם הרבה מאוד אתגרים. אם תרצה לפתח דברים, תכתוב Shell או כל מיני כלים. אם תרצה לחקור, תוריד קוד מקור של מערכות פופולריות ופלאגינים פופולריים ותחפש "0days" (חורי אבטחה אשר עדיין לא התגלו \ לא דווחו, בקיצור לא ידועים למפתח). מצאתי מספר 0days, אף אחד מהם לא היה מעניין או פופולרי אבל דרכם יצא לי לקבל מספר תגמולים וכמובן שלמדתי מלא והיה כיף. זוהי יותר ההתמחות שלי, אז פה אני יכול לענות על שאלות אם יהיה לך בפרטי בכל הנוגע לאבטחת אתרים.

עד כאן Rainbow_Dash, באיך להגיב בצורה נורמלית ולא אידיוטית לבקשת עזרה. כל מה שמעניין אותך ולא הצלחת להבין מההודעה שלי, אני מבקש ממך בכל לשון של בקשה לדחוף לגוגל ולהמשיך לקרוא כמה שיותר. אם אתה טוב, אתה תיפול למערבולת של מידע. אם אתה ממש טוב, אתה תחזור לאשכול ותשאל את כל מה שלא הבנת. ואני אענה לכל השאלות שיהיו לך, בפרטי או פה. אני אמשיך להביא לינקים לתגובה הזאת כל פעם שמישהו שואל איך להתחיל ללמוד אבטחת מידע אחרי שאתה פחות או יותר יודע מה זה מחשבים, מה זה אבטחת מידע, מה זה רשתות ובאלך אשכרה לתקוף דברים. כמובן שעדיף בצורה חוקית, כי יש הרבה פלטפורמות חוקיות (אתגרים) וזה סה"כ יותר בטוח ואתי. אין שום סיבה לדפוק לעצמכם את החיים כי יותר קל למצוא פתאום SQLI דרך גוגל מאשר לכתוב דף פריץ בעצמכם או לפתור איזה אתגר.
אבטחת מידע אגרסיבית זה כיף. אתה מתמודד עם אתגרים לוגיים ופסיכולוגיים כאחד. אתה מתמודד עם בעיות שנועדו להטעות מחשבים, ובעיות שנועדו להטעות בני אדם. אתה מתמודד עם קשיים שנועדו מחוסר ידע, ו99% מהבעיות שלך בהתחלה באמצע ובסוף (לא שיש סוף) הולכות להיות "אני לא יודע מספיק כדי לעקוף את זה" וזה סבבה לגמרי. כל הפואנטה של מה שאתה עושה זה לאסוף כמה שיותר מידע, ואז לחשוב כמה שיותר טוב כדי ליישם את מה שאספת להבין איך זה קשור לתפור את זה פנימה ולהתקדם הלאה. ובאמת, זה הולך להיות קשה. אם זה אשכרה מעניין אותך ואתה מוכן להשקיע שעות על גבי שעות בלשבור את הראש מול אתגרים, אתה הולך להבין כמה בדיוק זה קשה. ולמה בדיוק זה כל כך מדהים. בהצלחה לך, ובהצלחה לכל אדם ששואף ללמוד את המקצוע. מאחל לכם להיות נהדרים, ולשתף את שאר הקהילה במידה ואתם מצליחים משהו מגניב, לומדים משהו מגניב, יוצרים משהו מגניב, או כל מה שהרגע כתבתי אבל גם אם זה לא מגניב (כי סתם יכול להיות שאין לכם בטחון).
בהצלחה, כי... You're in for a bumpy ride.
3>